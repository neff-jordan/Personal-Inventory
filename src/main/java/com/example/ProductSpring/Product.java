/**
 * Represents a product entity in the inventory system.
 * This class is mapped to a database table using JPA (Jakarta Persistence API).
 * The product entity contains information about the product's name, type, location, and quantity.
 */

package com.example.ProductSpring;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

@Entity // need this on every user object class
public class Product {
    @Id      // both of these @ tell spring that int id is autogenerated in SQL
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;
    private String name;
    private String type;
    private String location;
    private int quantity;

    /**
     * Constructs a new Product with the specified details.
     *
     * @param name     the name of the product
     * @param type     the type or category of the product
     * @param location the storage location of the product
     * @param quantity the quantity of the product in stock
     */
    public Product(String name, String type, String location, int quantity) {
        this.name = name;
        this.type = type;
        this.location = location;
        this.quantity = quantity;
    }

    public Product() {
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Override
    public String toString() {
        return "Product{" +
                "name='" + name + '\'' +
                ", type='" + type + '\'' +
                ", location='" + location + '\'' +
                ", quantity=" + quantity +
                '}';
    }
}
